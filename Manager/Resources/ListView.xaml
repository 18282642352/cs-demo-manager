<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    mc:Ignorable="d"
                    xmlns:models="clr-namespace:Manager.Models"
                    xmlns:core="clr-namespace:Core.Models;assembly=csgodm.core"
                    xmlns:events="clr-namespace:Core.Models.Events;assembly=csgodm.core"
                    xmlns:converters="clr-namespace:Manager.Converters">

    <Style x:Key="OvertimeScoreboardTemplate" TargetType="{x:Type ListView}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="UnstyledItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ContentPresenter />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="OvertimeScoreboardItemTemplate" DataType="{x:Type ListViewItem}">
        <StackPanel Orientation="Vertical" d:DataContext="{d:DesignInstance core:Overtime}">
            <TextBlock Text="{Binding ScoreTeamCt}" Style="{StaticResource HalfScoreScoreboard}" />
            <TextBlock Text="|" Style="{StaticResource HalfScoreScoreboard}" />
            <TextBlock Text="{Binding ScoreTeamT}" Style="{StaticResource HalfScoreScoreboard}" />
        </StackPanel>
    </DataTemplate>

    <ItemsPanelTemplate x:Key="ScoreboardItemsPanel">
        <StackPanel
            Orientation="Horizontal"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
    </ItemsPanelTemplate>


    <Style TargetType="Rectangle" x:Key="DemoStatusColorStyle">
        <d:Style.DataContext>
            <x:Type Type="models:DemoStatus" />
        </d:Style.DataContext>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Name}"
                         Value="{x:Static models:DemoStatus.NAME_DEMO_STATUS_TO_WATCH}">
                <Setter Property="Fill" Value="{StaticResource GreenBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Name}"
                         Value="{x:Static models:DemoStatus.NAME_DEMO_STATUS_WATCHED}">
                <Setter Property="Fill" Value="{StaticResource LightBlueBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Name}"
                         Value="{x:Static models:DemoStatus.NAME_DEMO_STATUS_ERROR}">
                <Setter Property="Fill" Value="{StaticResource RedColorBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Name}"
                         Value="{x:Static models:DemoStatus.NAME_DEMO_STATUS_CORRUPTED}">
                <Setter Property="Fill" Value="{StaticResource LightRedColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Run" x:Key="ChatMessageSenderStyle">
        <d:Style.DataContext>
            <x:Type Type="events:ChatMessage" />
        </d:Style.DataContext>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SenderSide}"
                         Value="{x:Static core:Side.Terrorist}">
                <Setter Property="Foreground" Value="{StaticResource TerroristBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SenderSide}"
                         Value="{x:Static core:Side.CounterTerrorist}">
                <Setter Property="Foreground" Value="{StaticResource CounterTerroristBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Run" x:Key="ChatMessageIsSenderAliveStyle" BasedOn="{StaticResource ChatMessageSenderStyle}">
        <d:Style.DataContext>
            <x:Type Type="events:ChatMessage" />
        </d:Style.DataContext>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSenderAlive}"
                         Value="False">
                <Setter Property="Text" Value="*DEAD*" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSenderAlive}"
                         Value="True">
                <Setter Property="Text" Value="" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="ChatMessageItemTemplate" DataType="{x:Type ListViewItem}">
        <DataTemplate.Resources>
            <converters:SecondsToTimerConverter x:Key="SecondsToTimerConverter" />
        </DataTemplate.Resources>
        <RichTextBox d:DataContext="{d:DesignInstance events:ChatMessage}"
                     IsReadOnly="True"
                     BorderThickness="0"
                     Margin="0 -2 0 -2"
                     IsDocumentEnabled="True"
                     FontSize="14">
            <FlowDocument>
                <Paragraph>
                    <Run Text="{Binding Seconds, Converter={StaticResource SecondsToTimerConverter}}" />
                    <Run Style="{StaticResource ChatMessageIsSenderAliveStyle}" />
                    <Run Text="{Binding SenderName}" Style="{StaticResource ChatMessageSenderStyle}" />
                    <Run Text=":"  />
                    <Run Text="{Binding Text}" />
                </Paragraph>
            </FlowDocument>
        </RichTextBox>
    </DataTemplate>
</ResourceDictionary>
